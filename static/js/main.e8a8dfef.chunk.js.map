{"version":3,"sources":["Header/Header.js","Sidebar/Sidebar.js","Simulator/Parameters.js","Simulator/Results.js","Libcapgen.js","Simulator/Simulator.js","App.js","serviceWorker.js","index.js"],"names":["Header","withTheme","_ref","theme","rest","Object","objectWithoutProperties","react_default","a","createElement","Pane","assign","display","padding","background","palette","blue","base","flex","alignItems","Heading","color","colors","border","default","items","Sidebar","minHeight","width","borderRight","concat","map","x","key","borderBottom","INITIAL_PARAMETERS","populationSize","elitismCopies","generations","mutationRate","crossoverRate","steps","riskAversion","initialFundingRatio","targetFundingRatio","Parameters","_useState","useState","_useState2","slicedToArray","selected","setSelected","_useState3","objectSpread","_useState4","Fragment","flexDirection","size","Tablist","marginX","tab","index","Tab","is","id","isSelected","onSelect","Parameters_TabPane","Parameters_PortfolioParameters","Parameters_SimulationParameters","Parameters_OptimizerParameters","TabPane","_ref2","children","marginTop","Parameter","props","TextInputField","flexBasis","PortfolioParameters","flexWrap","Parameters_Parameter","label","hint","placeholder","value","SimulationParameters","OptimizerParameters","Results","paddingX","paddingY","libcapgen","window","Context","React","createContext","INITIAL_STATE","loading","Provider","state","setState","useEffect","onRuntimeInitialized","Consumer","Simulator","Button","appearance","iconBefore","onClick","result","optimize","console","log","runSimulation","App","Libcapgen_Provider","height","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e8a8dfef.chunk.js","sourcesContent":["import React from \"react\";\nimport { Pane, Heading, withTheme } from \"evergreen-ui\";\n\nexport const Header = withTheme(({ theme, ...rest }) => (\n  <Pane\n    display=\"flex\"\n    padding={16}\n    background={theme.palette.blue.base}\n    {...rest}\n  >\n    <Pane flex={1} alignItems=\"center\" display=\"flex\">\n      <Heading color={theme.colors.border.default}>Capgen</Heading>\n    </Pane>\n    <Pane />\n  </Pane>\n));\n","import React from \"react\";\nimport { Pane, Heading, withTheme } from \"evergreen-ui\";\n\nconst items = [3, 2, 1];\n\nexport const Sidebar = withTheme(({ theme, ...rest }) => (\n  <Pane\n    minHeight=\"100%\"\n    width=\"200px\"\n    background=\"tint1\"\n    borderRight={`1px solid ${theme.colors.border.default}`}\n    {...rest}\n  >\n    {items.map(x => (\n      <Pane key={x} borderBottom={`1px solid ${theme.colors.border.default}`}>\n        Backtest #{x}\n      </Pane>\n    ))}\n  </Pane>\n));\n","import React, { useState } from \"react\";\nimport {\n  Pane,\n  Heading,\n  Button,\n  Tablist,\n  Tab,\n  TextInputField,\n  withTheme\n} from \"evergreen-ui\";\n\nexport const INITIAL_PARAMETERS = {\n  populationSize: 100,\n  elitismCopies: 2,\n  generations: 100,\n  mutationRate: 0.02,\n  crossoverRate: 0.02,\n  steps: 4,\n  riskAversion: 0.5,\n  initialFundingRatio: 1.3,\n  targetFundingRatio: 1.3\n};\n\nexport const Parameters = withTheme(({ theme }) => {\n  const [selected, setSelected] = useState(0);\n  const [parameters, setParameters] = useState({ ...INITIAL_PARAMETERS });\n  return (\n    <>\n      <Pane\n        background=\"tint1\"\n        borderBottom={`1px solid ${theme.colors.border.default}`}\n        display=\"flex\"\n        padding={16}\n        flexDirection=\"column\"\n      >\n        <Pane flex={1}>\n          <Heading size={200}>Parameters</Heading>\n        </Pane>\n      </Pane>\n      <Pane\n        borderBottom={`1px solid ${theme.colors.border.default}`}\n        display=\"flex\"\n        padding={16}\n        flexDirection=\"column\"\n      >\n        <Tablist marginX={-4}>\n          {[\"Portfolio\", \"Simulation\", \"Optimizer\"].map((tab, index) => (\n            <Tab\n              key={tab}\n              is=\"a\"\n              id={tab}\n              isSelected={index === selected}\n              onSelect={() => setSelected(index)}\n            >\n              {tab}\n            </Tab>\n          ))}\n        </Tablist>\n        <TabPane selected={selected === 0}>\n          <PortfolioParameters />\n        </TabPane>\n        <TabPane selected={selected === 1}>\n          <SimulationParameters />\n        </TabPane>\n        <TabPane selected={selected === 2}>\n          <OptimizerParameters />\n        </TabPane>\n      </Pane>\n    </>\n  );\n});\n\nexport const TabPane = ({ selected, children, ...rest }) => (\n  <Pane marginTop={16} display={selected ? \"block\" : \"none\"} {...rest}>\n    {children}\n  </Pane>\n);\n\nconst Parameter = props => (\n  <TextInputField flexBasis=\"28%\" marginX={8} {...props} />\n);\n\nexport const PortfolioParameters = () => {\n  return (\n    <Pane display=\"flex\" flexWrap=\"wrap\" marginX={-8}>\n      <Parameter\n        label=\"Risk aversion\"\n        hint=\"Set to 0.0 to optimize without considering risk.\"\n        placeholder=\"0.5\"\n        value={0.5}\n      />\n      <Parameter\n        label=\"Initial funding ratio\"\n        hint=\"Initial funding ratio of the portfolio.\"\n        placeholder=\"1.3\"\n        value={1.3}\n      />\n      <Parameter\n        label=\"Target funding ratio\"\n        hint=\"Penalize portfolios with funding ratio below this value.\"\n        placeholder=\"1.3\"\n        value={1.3}\n      />\n    </Pane>\n  );\n};\n\nexport const SimulationParameters = () => {\n  return (\n    <Pane display=\"flex\" flexWrap=\"wrap\" marginX={-8}>\n      <Parameter\n        label=\"Steps\"\n        hint=\"Number of steps to simulate.\"\n        placeholder=\"4\"\n        value={4}\n      />\n    </Pane>\n  );\n};\n\nexport const OptimizerParameters = () => {\n  return (\n    <Pane display=\"flex\" flexWrap=\"wrap\" marginX={-8}>\n      <Parameter\n        label=\"Population size\"\n        hint=\"Number of individuals in the population.\"\n        placeholder=\"100\"\n        value={100}\n      />\n      <Parameter\n        label=\"Elitism copies\"\n        hint=\"Keep a number of clones of the best individuals at iteration.\"\n        placeholder=\"2\"\n        value={2}\n      />\n      <Parameter\n        label=\"Generations\"\n        hint=\"Iterate through this many generations.\"\n        placeholder=\"100\"\n        value={100}\n      />\n      <Parameter\n        label=\"Mutation rate\"\n        hint=\"Probability of mutating a gene.\"\n        placeholder=\"0.02\"\n        value={0.02}\n      />\n      <Parameter\n        label=\"Crossover rate\"\n        hint=\"Probability of crossing two individuals.\"\n        placeholder=\"0.02\"\n        value={0.02}\n      />\n    </Pane>\n  );\n};\n","import React from \"react\";\nimport { Pane, Heading, Button, withTheme } from \"evergreen-ui\";\n\nexport const Results = withTheme(({ theme }) => (\n  <>\n    <Pane\n      background=\"tint1\"\n      borderBottom={`1px solid ${theme.colors.border.default}`}\n      display=\"flex\"\n      paddingX={16}\n      paddingY={8}\n      flexDirection=\"column\"\n    >\n      <Pane flex={1}>\n        <Heading size={200}>Results</Heading>\n      </Pane>\n    </Pane>\n  </>\n));\n","import React, { useState, useEffect } from \"react\";\n\nconst libcapgen = window.libcapgen();\n\nconst Context = React.createContext();\n\nconst INITIAL_STATE = {\n  loading: true,\n  libcapgen: null\n};\n\nexport const Provider = ({ children }) => {\n  const [state, setState] = useState(INITIAL_STATE);\n  useEffect(() => {\n    libcapgen.onRuntimeInitialized = () => {\n      setState({\n        loading: false,\n        libcapgen\n      });\n    };\n  }, []);\n  return <Context.Provider value={state}>{children}</Context.Provider>;\n};\n\nexport const Consumer = Context.Consumer;\n","import React from \"react\";\nimport { Pane, Heading, Button, withTheme } from \"evergreen-ui\";\nimport { Parameters } from \"./Parameters\";\nimport { Results } from \"./Results\";\nimport { Consumer as Libcapgen } from \"../Libcapgen\";\n\nconst runSimulation = libcapgen => {\n  const result = libcapgen.optimize({\n    populationSize: 10,\n    elitismCopies: 2,\n    generations: 10,\n    mutationRate: 0.02,\n    crossoverRate: 0.02,\n    steps: 4,\n    riskAversion: 0.5,\n    initialFundingRatio: 1.3,\n    targetFundingRatio: 1.3\n  });\n\n  console.log(result);\n};\n\nexport const Simulator = withTheme(({ theme, ...rest }) => (\n  <Pane display=\"flex\" flexDirection=\"column\" {...rest}>\n    <Pane\n      borderBottom={`1px solid ${theme.colors.border.default}`}\n      display=\"flex\"\n      padding={16}\n      alignItems=\"center\"\n    >\n      <Pane flex={1}>\n        <Heading>Backtest</Heading>\n      </Pane>\n      <Pane>\n        <Libcapgen>\n          {({ libcapgen }) => (\n            <Button\n              appearance=\"primary\"\n              iconBefore=\"play\"\n              onClick={() => runSimulation(libcapgen)}\n            >\n              Run\n            </Button>\n          )}\n        </Libcapgen>\n      </Pane>\n    </Pane>\n    <Parameters />\n    <Results />\n  </Pane>\n));\n","import React, { Component } from \"react\";\nimport { Pane, Heading } from \"evergreen-ui\";\nimport { Header } from \"./Header/Header\";\nimport { Sidebar } from \"./Sidebar/Sidebar\";\nimport { Simulator } from \"./Simulator/Simulator\";\nimport \"./App.css\";\nimport { Provider, Consumer } from \"./Libcapgen\";\n\nconst App = () => (\n  <Provider>\n    <Consumer>\n      {({ loading, libcapgen }) =>\n        loading ? (\n          <Heading size={900}>Loading...</Heading>\n        ) : (\n          <Pane height=\"100vh\" display=\"flex\" flexDirection=\"column\">\n            <Header />\n            <Pane display=\"flex\" flex={1}>\n              <Pane flex={0}>\n                <Sidebar />\n              </Pane>\n              <Pane flex={1}>\n                <Simulator />\n              </Pane>\n            </Pane>\n          </Pane>\n        )\n      }\n    </Consumer>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}