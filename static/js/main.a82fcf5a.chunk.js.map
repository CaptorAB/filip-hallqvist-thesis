{"version":3,"sources":["Header/Header.js","libcapgen.js","constants.js","SimulatorContainer.js","Sidebar/Sidebar.js","Tabs/Tabs.js","Simulator/Parameters.js","Simulator/PerformancePlot.js","Simulator/Results.js","Simulator/Simulator.js","App.js","serviceWorker.js","index.js"],"names":["Header","withTheme","_ref","theme","rest","Object","objectWithoutProperties","react_default","a","createElement","Pane","assign","display","padding","background","palette","blue","base","flex","alignItems","Heading","color","colors","border","default","_libcapgen","window","libcapgen","instance","callbacks","onRuntimeInitialized","optimize","apply","arguments","map","c","Promise","resolve","push","N_INSTRUMENTS","SimulatorContainer","_Container","_getPrototypeOf2","_this","classCallCheck","this","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","concat","state","history","loading","metrics","totalReturn","risk","scenarios","asyncToGenerator","regenerator_default","mark","_callee","options","result","nScenarios","i","ix","scenario","j","jx","wrap","_context","prev","next","sent","Math","pow","steps","priceChanges","goal","goals","get","probability","probabilities","weights","individual","setState","objectSpread","title","timestamp","format","Date","toConsumableArray","stop","_x","inherits","Container","Sidebar","height","overflowY","width","borderRight","unstated_es","to","simulator","x","key","borderBottom","size","UnorderedList","marginBottom","Sidebar_Metric","icon","toFixed","Metric","_ref2","children","ListItem","marginTop","marginRight","paddingLeft","fontSize","TabPane","Tab","src_Tab","Tabs","_ref3","_useState","useState","_useState2","slicedToArray","selected","setSelected","Fragment","Tablist","marginX","_x$props","props","Tabs_Tab","is","isSelected","onSelect","Tabs_TabPane","INITIAL_PARAMETERS","populationSize","elitismCopies","generations","mutationRate","crossoverRate","riskAversion","initialFundingRatio","targetFundingRatio","Parameters","paddingX","paddingY","flexDirection","Tabs_Tabs","Parameters_PortfolioParameters","Parameters_SimulationParameters","Parameters_OptimizerParameters","disabled","Parameter","TextInputField","flexBasis","PortfolioParameters","flexWrap","Parameters_Parameter","label","hint","placeholder","value","SimulationParameters","OptimizerParameters","Plot","createPlotlyComponent","Plotly","PerformancePlot","current","fill","y","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","err","return","data","type","mode","marker","layout","margin","l","r","b","t","pad","useResizeHandler","style","Results","marginY","Results_Metric","Simulator","Button","appearance","iconBefore","onClick","App","Spinner","transform","position","left","top","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a82fcf5a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Pane, Heading, withTheme } from \"evergreen-ui\";\n\nexport const Header = withTheme(({ theme, ...rest }) => (\n  <Pane\n    display=\"flex\"\n    padding={16}\n    background={theme.palette.blue.base}\n    {...rest}\n  >\n    <Pane flex={1} alignItems=\"center\" display=\"flex\">\n      <Heading color={theme.colors.border.default}>Capgen</Heading>\n    </Pane>\n    <Pane />\n  </Pane>\n));\n","const _libcapgen = window.libcapgen();\n\nlet instance = null;\nconst callbacks = [];\n_libcapgen.onRuntimeInitialized = () => {\n  instance = {\n    optimize: (...args) => _libcapgen.optimize(...args)\n  };\n  callbacks.map(c => c());\n};\n\nexport const libcapgen = () =>\n  new Promise(resolve => {\n    if (instance === null) {\n      callbacks.push(() => resolve(instance));\n    } else {\n      resolve(instance);\n    }\n  });\n","export const N_INSTRUMENTS = 13;\nexport const N_RISKS = 8;\n\nexport const DOMESTIC_EQUITY_INDEX = 0;\nexport const GLOBAL_EQUITY_INDEX = 1;\nexport const REAL_ESTATE_INDEX = 2;\nexport const ALTERNATIVE_INDEX = 3;\nexport const CREDIT_INDEX = 4;\nexport const BONDS_2Y_INDEX = 5;\nexport const BONDS_5Y_INDEX = 6;\nexport const CASH_INDEX = 7;\nexport const FTA_INDEX = 8;\nexport const DOMESTIC_EQUITY_FUTURE_INDEX = 9;\nexport const INTEREST_RATE_SWAP_2Y_INDEX = 10;\nexport const INTEREST_RATE_SWAP_5Y_INDEX = 11;\nexport const INTEREST_RATE_SWAP_20Y_INDEX = 12;\n\nexport const DOMESTIC_MARKET_RISK_INDEX = 0;\nexport const GLOBAL_MARKET_RISK_INDEX = 1;\nexport const ALTERNATIVE_RISK_INDEX = 2;\nexport const INTEREST_RATE_2Y_RISK_INDEX = 3;\nexport const INTEREST_RATE_5Y_RISK_INDEX = 4;\nexport const INTEREST_RATE_20Y_RISK_INDEX = 5;\nexport const CREDIT_RISK_INDEX = 6;\nexport const CASH_RISK_INDEX = 7;\n","import { Container } from \"unstated\";\nimport { libcapgen } from \"./libcapgen\";\nimport { format } from \"date-fns\";\nimport { N_INSTRUMENTS } from \"./constants\";\n\nexport class SimulatorContainer extends Container {\n  state = {\n    history: [],\n    loading: false,\n    metrics: {\n      totalReturn: 0,\n      risk: 0\n    },\n    scenarios: []\n  };\n  optimize = async options => {\n    const instance = await libcapgen();\n    const result = instance.optimize(options);\n    const metrics = {\n      totalReturn: result.totalReturn,\n      risk: result.risk\n    };\n\n    const steps = [];\n    const scenarios = [];\n    const nScenarios = 2 ** options.steps - 1;\n    for (let i = 0; i < nScenarios; i++) {\n      const ix = i * N_INSTRUMENTS;\n      const scenario = {\n        priceChanges: [],\n        goal: result.goals.get(i),\n        probability: result.probabilities.get(i),\n        weights: []\n      };\n      for (let j = 0; j < N_INSTRUMENTS; j++) {\n        const jx = ix + j;\n        scenario.priceChanges.push(result.priceChanges.get(jx));\n        scenario.weights.push(result.individual.get(jx));\n      }\n      scenarios.push(scenario);\n    }\n\n    this.setState({\n      ...this.state,\n      history: [\n        {\n          title: \"Backtest\",\n          timestamp: format(new Date(), \"yyyy-MM-dd HH:mm:ss\"),\n          metrics: { ...metrics }\n        },\n        ...this.state.history\n      ],\n      metrics: { ...metrics },\n      scenarios\n    });\n  };\n}\n","import React from \"react\";\nimport {\n  Pane,\n  Heading,\n  UnorderedList,\n  Icon,\n  ListItem,\n  withTheme\n} from \"evergreen-ui\";\nimport { Subscribe } from \"unstated\";\nimport { SimulatorContainer } from \"../SimulatorContainer\";\n\nexport const Sidebar = withTheme(({ theme, ...rest }) => (\n  <Pane\n    height=\"100%\"\n    overflowY=\"auto\"\n    width=\"200px\"\n    background=\"tint1\"\n    borderRight={`1px solid ${theme.colors.border.default}`}\n    {...rest}\n  >\n    <Subscribe to={[SimulatorContainer]}>\n      {simulator =>\n        simulator.state.history.map((x, i) => (\n          <Pane\n            key={i}\n            padding={16}\n            borderBottom={`1px solid ${theme.colors.border.default}`}\n          >\n            <Heading size={200}>{x.title}</Heading>\n            <Heading size={100}>{x.timestamp}</Heading>\n            <UnorderedList marginBottom={0}>\n              <Metric icon=\"symbol-triangle-up\">\n                {x.metrics.totalReturn.toFixed(2)}\n              </Metric>\n              <Metric icon=\"symbol-triangle-down\">\n                {x.metrics.risk.toFixed(2)}\n              </Metric>\n            </UnorderedList>\n          </Pane>\n        ))\n      }\n    </Subscribe>\n  </Pane>\n));\n\nconst Metric = ({ children, ...rest }) => (\n  <ListItem\n    size={100}\n    display=\"inline-block\"\n    marginTop={0}\n    marginBottom={0}\n    marginRight={32}\n    paddingLeft={0}\n    color=\"muted\"\n    fontSize={11}\n    {...rest}\n  >\n    {children}\n  </ListItem>\n);\n","import React, { useState } from \"react\";\nimport { Tablist, Pane, Tab as EvergreenTab } from \"evergreen-ui\";\n\nexport const TabPane = ({ children, ...rest }) => (\n  <Pane marginTop={16} {...rest}>\n    {children}\n  </Pane>\n);\n\nexport const Tab = ({ children, ...rest }) => (\n  <EvergreenTab {...rest}>{children}</EvergreenTab>\n);\n\nexport const Tabs = ({ children }) => {\n  const [selected, setSelected] = useState(0);\n  return (\n    <>\n      <Tablist marginX={-4}>\n        {children.map((x, i) => {\n          const { title, children, ...rest } = x.props;\n          return (\n            <Tab\n              key={i}\n              is=\"a\"\n              isSelected={i === selected}\n              onSelect={() => setSelected(i)}\n              {...rest}\n            >\n              {title}\n            </Tab>\n          );\n        })}\n      </Tablist>\n      {children.map(\n        (x, i) =>\n          selected === i && <TabPane key={i}>{x.props.children}</TabPane>\n      )}\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Pane, Heading, TextInputField, withTheme } from \"evergreen-ui\";\n\nimport { Tabs, Tab } from \"../Tabs/Tabs\";\n\nexport const INITIAL_PARAMETERS = {\n  populationSize: 100,\n  elitismCopies: 2,\n  generations: 100,\n  mutationRate: 0.02,\n  crossoverRate: 0.02,\n  steps: 4,\n  riskAversion: 0.5,\n  initialFundingRatio: 1.3,\n  targetFundingRatio: 1.3\n};\n\nexport const Parameters = withTheme(({ theme }) => {\n  const [parameters, setParameters] = useState({ ...INITIAL_PARAMETERS });\n  return (\n    <>\n      <Pane\n        background=\"tint1\"\n        borderBottom={`1px solid ${theme.colors.border.default}`}\n        display=\"flex\"\n        paddingX={16}\n        paddingY={8}\n        flexDirection=\"column\"\n      >\n        <Pane flex={1}>\n          <Heading size={200}>Parameters</Heading>\n        </Pane>\n      </Pane>\n      <Pane\n        borderBottom={`1px solid ${theme.colors.border.default}`}\n        display=\"flex\"\n        padding={16}\n        flexDirection=\"column\"\n      >\n        <Tabs>\n          <Tab title=\"Portfolio\">\n            <PortfolioParameters />\n          </Tab>\n          <Tab title=\"Simulation\">\n            <SimulationParameters />\n          </Tab>\n          <Tab title=\"Optimizer\">\n            <OptimizerParameters />\n          </Tab>\n          <Tab title=\"Correlations\" disabled={true}>\n            Correlations\n          </Tab>\n        </Tabs>\n      </Pane>\n    </>\n  );\n});\n\nconst Parameter = props => (\n  <TextInputField flexBasis=\"28%\" marginX={8} {...props} />\n);\n\nexport const PortfolioParameters = () => {\n  return (\n    <Pane display=\"flex\" flexWrap=\"wrap\" marginX={-8}>\n      <Parameter\n        label=\"Risk aversion\"\n        hint=\"Set to 0.0 to optimize without considering risk.\"\n        placeholder=\"0.5\"\n        value={0.5}\n      />\n      <Parameter\n        label=\"Initial funding ratio\"\n        hint=\"Initial funding ratio of the portfolio.\"\n        placeholder=\"1.3\"\n        value={1.3}\n      />\n      <Parameter\n        label=\"Target funding ratio\"\n        hint=\"Penalize portfolios with funding ratio below this value.\"\n        placeholder=\"1.3\"\n        value={1.3}\n      />\n    </Pane>\n  );\n};\n\nexport const SimulationParameters = () => {\n  return (\n    <Pane display=\"flex\" flexWrap=\"wrap\" marginX={-8}>\n      <Parameter\n        label=\"Steps\"\n        hint=\"Number of steps to simulate.\"\n        placeholder=\"4\"\n        value={4}\n      />\n    </Pane>\n  );\n};\n\nexport const OptimizerParameters = () => {\n  return (\n    <Pane display=\"flex\" flexWrap=\"wrap\" marginX={-8}>\n      <Parameter\n        label=\"Population size\"\n        hint=\"Number of individuals in the population.\"\n        placeholder=\"100\"\n        value={100}\n      />\n      <Parameter\n        label=\"Elitism copies\"\n        hint=\"Keep a number of clones of the best individuals at iteration.\"\n        placeholder=\"2\"\n        value={2}\n      />\n      <Parameter\n        label=\"Generations\"\n        hint=\"Iterate through this many generations.\"\n        placeholder=\"100\"\n        value={100}\n      />\n      <Parameter\n        label=\"Mutation rate\"\n        hint=\"Probability of mutating a gene.\"\n        placeholder=\"0.02\"\n        value={0.02}\n      />\n      <Parameter\n        label=\"Crossover rate\"\n        hint=\"Probability of crossing two individuals.\"\n        placeholder=\"0.02\"\n        value={0.02}\n      />\n    </Pane>\n  );\n};\n","import React from \"react\";\nimport { Pane, Heading, withTheme } from \"evergreen-ui\";\nimport Plotly from \"plotly.js-basic-dist\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\n\nconst Plot = createPlotlyComponent(Plotly);\n\nexport const PerformancePlot = withTheme(\n  ({ theme, scenarios, current, title }) => {\n    const x = Array(scenarios.length)\n      .fill(0)\n      .map((x, i) => i);\n    const y = [];\n\n    for (const scenario of scenarios) {\n      y.push(scenario.priceChanges[current]);\n    }\n\n    return (\n      <Pane background=\"tint1\" padding={16} border=\"default\">\n        <Heading size={200} marginBottom={16}>\n          {title}\n        </Heading>\n        <Pane border=\"default\" height=\"200px\">\n          <Plot\n            data={[\n              {\n                x,\n                y,\n                type: \"scatter\",\n                mode: \"lines\",\n                marker: { color: theme.palette.blue.base }\n              }\n            ]}\n            layout={{\n              margin: {\n                l: 32,\n                r: 32,\n                b: 32,\n                t: 32,\n                pad: 0\n              }\n            }}\n            useResizeHandler={true}\n            style={{ width: \"100%\", height: \"100%\" }}\n          />\n        </Pane>\n      </Pane>\n    );\n  }\n);\n","import React from \"react\";\nimport { Pane, Card, Heading, withTheme } from \"evergreen-ui\";\n\nimport { Tabs, Tab } from \"../Tabs/Tabs\";\nimport { Subscribe } from \"unstated\";\nimport { SimulatorContainer } from \"../SimulatorContainer\";\nimport { PerformancePlot } from \"./PerformancePlot\";\n\nexport const Results = withTheme(({ theme }) => (\n  <>\n    <Pane\n      background=\"tint1\"\n      borderBottom={`1px solid ${theme.colors.border.default}`}\n      display=\"flex\"\n      paddingX={16}\n      paddingY={8}\n      flexDirection=\"column\"\n    >\n      <Pane flex={1}>\n        <Heading size={200}>Results</Heading>\n      </Pane>\n    </Pane>\n    <Pane display=\"flex\" padding={16} flexDirection=\"column\">\n      <Tabs>\n        <Tab title=\"Metrics\">\n          <Pane display=\"flex\" flexWrap=\"wrap\" marginX={-8} marginY={-8}>\n            <Subscribe to={[SimulatorContainer]}>\n              {simulator => (\n                <>\n                  <Metric\n                    title=\"Expected Return\"\n                    value={simulator.state.metrics.totalReturn.toFixed(2)}\n                  />\n                  <Metric\n                    title=\"Expected Risk\"\n                    value={simulator.state.metrics.risk.toFixed(2)}\n                  />\n                </>\n              )}\n            </Subscribe>\n          </Pane>\n        </Tab>\n        <Tab title=\"Performance\">\n          <Subscribe to={[SimulatorContainer]}>\n            {simulator => (\n              <PerformancePlot\n                scenarios={simulator.state.scenarios}\n                current={0}\n                title=\"Domestic Equity\"\n              />\n            )}\n          </Subscribe>\n        </Tab>\n        <Tab title=\"Weights\">Weights</Tab>\n      </Tabs>\n    </Pane>\n  </>\n));\n\nconst Metric = ({ title, value, children, ...rest }) => (\n  <Pane\n    background=\"tint1\"\n    padding={16}\n    flexBasis=\"28%\"\n    marginX={8}\n    marginY={8}\n    border=\"default\"\n    {...rest}\n  >\n    <Heading size={200} marginBottom={8}>\n      {title}\n    </Heading>\n    {typeof value === \"undefined\" ? (\n      children\n    ) : (\n      <Heading size={800}>{value}</Heading>\n    )}\n  </Pane>\n);\n","import React from \"react\";\nimport { Pane, Heading, Button, withTheme } from \"evergreen-ui\";\nimport { Subscribe } from \"unstated\";\n\nimport { Parameters } from \"./Parameters\";\nimport { Results } from \"./Results\";\nimport { SimulatorContainer } from \"../SimulatorContainer\";\n\nexport const Simulator = withTheme(({ theme, ...rest }) => (\n  <Pane display=\"flex\" flexDirection=\"column\" {...rest}>\n    <Pane\n      borderBottom={`1px solid ${theme.colors.border.default}`}\n      display=\"flex\"\n      padding={16}\n      alignItems=\"center\"\n    >\n      <Pane flex={1}>\n        <Heading>Backtest</Heading>\n      </Pane>\n      <Pane>\n        <Subscribe to={[SimulatorContainer]}>\n          {simulator => (\n            <Button\n              appearance=\"primary\"\n              iconBefore=\"play\"\n              onClick={() =>\n                simulator.optimize({\n                  populationSize: 10,\n                  elitismCopies: 2,\n                  generations: 10,\n                  mutationRate: 0.02,\n                  crossoverRate: 0.02,\n                  steps: 4,\n                  riskAversion: 0.0,\n                  initialFundingRatio: 2.0,\n                  targetFundingRatio: 1.3\n                })\n              }\n            >\n              Run\n            </Button>\n          )}\n        </Subscribe>\n      </Pane>\n    </Pane>\n    <Parameters />\n    <Results />\n  </Pane>\n));\n","import React from \"react\";\nimport { Pane, Spinner } from \"evergreen-ui\";\nimport { Header } from \"./Header/Header\";\nimport { Sidebar } from \"./Sidebar/Sidebar\";\nimport { Simulator } from \"./Simulator/Simulator\";\nimport { Subscribe } from \"unstated\";\nimport { SimulatorContainer } from \"./SimulatorContainer\";\n\nconst HEADER_HEIGHT = \"52px\";\n\nconst App = () => {\n  return (\n    <Subscribe to={[SimulatorContainer]}>\n      {simulator =>\n        simulator.loading ? (\n          <Spinner\n            transform=\"translate(-50%, -50%)\"\n            position=\"absolute\"\n            left=\"50%\"\n            top=\"50%\"\n          />\n        ) : (\n          <Pane height=\"100vh\" display=\"flex\" flexDirection=\"column\">\n            <Header />\n            <Pane display=\"flex\" height={`calc(100% - ${HEADER_HEIGHT})`}>\n              <Pane flex={0} height=\"100%\">\n                <Sidebar />\n              </Pane>\n              <Pane flex={1} height=\"100%\">\n                <Simulator />\n              </Pane>\n            </Pane>\n          </Pane>\n        )\n      }\n    </Subscribe>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"unstated\";\n\nReactDOM.render(\n  <Provider>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}