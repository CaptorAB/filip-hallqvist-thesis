{"version":3,"sources":["Header/Header.js","libcapgen.js","constants.js","SimulatorContainer.js","Sidebar/Sidebar.js","Tabs/Tabs.js","Simulator/Parameters.js","Plot.js","Simulator/Results.js","Simulator/Simulator.js","App.js","serviceWorker.js","index.js"],"names":["Header","withTheme","_ref","theme","rest","Object","objectWithoutProperties","react_default","a","createElement","Pane","assign","display","padding","background","palette","blue","base","flex","alignItems","Heading","color","colors","border","default","_libcapgen","window","libcapgen","instance","callbacks","onRuntimeInitialized","optimize","apply","arguments","map","c","Promise","resolve","push","N_INSTRUMENTS","INSTRUMENT_NAMES","SimulatorContainer","_Container","_getPrototypeOf2","_this","classCallCheck","this","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","concat","state","history","loading","metrics","fitness","expectedReturn","expectedRisk","weights","finalReturns","asyncToGenerator","regenerator_default","mark","_callee","options","result","nFinalWealths","iBestScenario","iWorstScenario","_i","finalReturn","bestPath","i","worstPath","j","_i2","wrap","_context","prev","next","sent","Math","pow","steps","finalWealths","get","intermediateWealths","floor","reverse","individual","title","timestamp","format","Date","objectSpread","setState","toConsumableArray","stop","_x","inherits","Container","Sidebar","height","overflowY","width","borderRight","unstated_es","to","simulator","x","key","borderBottom","size","UnorderedList","marginBottom","Sidebar_Metric","icon","toFixed","Metric","_ref2","children","ListItem","marginTop","marginRight","paddingLeft","fontSize","TabPane","Tab","src_Tab","Tabs","_ref3","_useState","useState","_useState2","slicedToArray","selected","setSelected","Fragment","Tablist","marginX","React","Children","_x$props","props","Tabs_Tab","is","isSelected","onSelect","Tabs_TabPane","Parameters","values","handleChange","setFieldValue","paddingX","paddingY","flexDirection","Tabs_Tabs","Parameters_PortfolioParameters","Parameters_SimulationParameters","Parameters_OptimizerParameters","Parameters_ReallocationParameters","Parameters_InstrumentConstraintParameters","Parameters_MarginConstraintParameters","Parameter","TextInputField","flexBasis","MarginConstraintParameters","flexWrap","Text","marginY","marginConstraints","constraint","index","Small","TextInput","type","name","value","onChange","step","min","max","InstrumentConstraintParameters","instrumentConstraints","allocationConstraint","ReallocationParameters","_ref4","transactionCosts","transactionCost","Parameters_Parameter","label","placeholder","PortfolioParameters","_ref5","hint","riskAversion","initialFundingRatio","targetFundingRatio","SimulationParameters","_ref6","OptimizerParameters","_ref7","populationSize","elitismCopies","generations","mutationRate","crossoverRate","Plot","createPlotlyComponent","Plotly","Results","weight","Results_Card","data","y","Card","Simulator","formik_esm","initialValues","onSubmit","setSubmitting","isSubmitting","handleSubmit","Button","appearance","iconBefore","App","Spinner","transform","position","left","top","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.19e35110.chunk.js","sourcesContent":["import React from \"react\";\nimport { Pane, Heading, withTheme } from \"evergreen-ui\";\n\nexport const Header = withTheme(({ theme, ...rest }) => (\n  <Pane\n    display=\"flex\"\n    padding={16}\n    background={theme.palette.blue.base}\n    {...rest}\n  >\n    <Pane flex={1} alignItems=\"center\" display=\"flex\">\n      <Heading color={theme.colors.border.default}>Capgen</Heading>\n    </Pane>\n    <Pane />\n  </Pane>\n));\n","const _libcapgen = window.libcapgen();\n\nlet instance = null;\nconst callbacks = [];\n_libcapgen.onRuntimeInitialized = () => {\n  instance = {\n    optimize: (...args) => _libcapgen.optimize(...args)\n  };\n  callbacks.map(c => c());\n};\n\nexport const libcapgen = () =>\n  new Promise(resolve => {\n    if (instance === null) {\n      callbacks.push(() => resolve(instance));\n    } else {\n      resolve(instance);\n    }\n  });\n","export const N_INSTRUMENTS = 13;\nexport const N_RISKS = 8;\n\nexport const DOMESTIC_EQUITY_INDEX = 0;\nexport const GLOBAL_EQUITY_INDEX = 1;\nexport const REAL_ESTATE_INDEX = 2;\nexport const ALTERNATIVE_INDEX = 3;\nexport const CREDIT_INDEX = 4;\nexport const BONDS_2Y_INDEX = 5;\nexport const BONDS_5Y_INDEX = 6;\nexport const CASH_INDEX = 7;\nexport const FTA_INDEX = 8;\nexport const DOMESTIC_EQUITY_FUTURE_INDEX = 9;\nexport const INTEREST_RATE_SWAP_2Y_INDEX = 10;\nexport const INTEREST_RATE_SWAP_5Y_INDEX = 11;\nexport const INTEREST_RATE_SWAP_20Y_INDEX = 12;\n\nexport const DOMESTIC_MARKET_RISK_INDEX = 0;\nexport const GLOBAL_MARKET_RISK_INDEX = 1;\nexport const ALTERNATIVE_RISK_INDEX = 2;\nexport const INTEREST_RATE_2Y_RISK_INDEX = 3;\nexport const INTEREST_RATE_5Y_RISK_INDEX = 4;\nexport const INTEREST_RATE_20Y_RISK_INDEX = 5;\nexport const CREDIT_RISK_INDEX = 6;\nexport const CASH_RISK_INDEX = 7;\n\nexport const INSTRUMENT_NAMES = [\n  \"Domestic Equity\",\n  \"Global Equity\",\n  \"Real Estate\",\n  \"Alternative\",\n  \"Credit\",\n  \"Bonds 2-Year\",\n  \"Bonds 5-Year\",\n  \"Cash\",\n  \"FTA\",\n  \"Domestic Equity Futures\",\n  \"Interest Rate Swap 2-Year\",\n  \"Interest Rate Swap 5-Year\",\n  \"Interest Rate Swap 20-Year\"\n];\n","import { Container } from \"unstated\";\n\nimport { libcapgen } from \"./libcapgen\";\nimport { format } from \"date-fns\";\nimport { N_INSTRUMENTS } from \"./constants\";\n\n/*\nconst _preOrderTraversal = (array, current, path, paths) => {\n  path.push(array[current]);\n  const left = 2 * current + 1;\n  const right = 2 * current + 2;\n  if (left <= array.length && right <= array.length) {\n    _preOrderTraversal(array, left, [...path], paths);\n    _preOrderTraversal(array, right, [...path], paths);\n  } else {\n    paths.push(path);\n  }\n};\n\nconst preOrderTraversal = array => {\n  const paths = [];\n  _preOrderTraversal(array, 0, [], paths);\n  return paths;\n};\n*/\n\nexport class SimulatorContainer extends Container {\n  state = {\n    history: [],\n    loading: false,\n    metrics: {\n      fitness: 0,\n      expectedReturn: 0,\n      expectedRisk: 0\n    },\n    weights: [],\n    finalReturns: []\n  };\n  optimize = async options => {\n    const instance = await libcapgen();\n    const result = instance.optimize(options);\n    const metrics = {\n      fitness: result.fitness,\n      expectedReturn: result.expectedReturn,\n      expectedRisk: result.expectedRisk\n    };\n\n    const nFinalWealths = 2 ** (options.steps - 1);\n\n    const finalReturns = [];\n    let iBestScenario = -1;\n    let iWorstScenario = -1;\n    for (let i = 0; i < nFinalWealths; ++i) {\n      const finalReturn = result.finalWealths.get(i) - 1;\n      finalReturns.push(finalReturn);\n\n      if (iBestScenario < 0 || finalReturn > finalReturns[iBestScenario]) {\n        iBestScenario = i;\n      }\n      if (iWorstScenario < 0 || finalReturn < finalReturns[iWorstScenario]) {\n        iWorstScenario = i;\n      }\n    }\n\n    // Backtrack from best and worst scenarios\n    // to find path from the root\n    const bestPath = [result.finalWealths.get(iBestScenario)];\n    let i = nFinalWealths + iBestScenario - 1;\n    while (i >= 0) {\n      bestPath.push(result.intermediateWealths.get(i));\n      i = Math.floor((i - 1) / 2);\n    }\n    bestPath.reverse();\n\n    // Do the same for worst path\n    const worstPath = [result.finalWealths.get(iWorstScenario)];\n    let j = nFinalWealths + iWorstScenario - 1;\n    while (j >= 0) {\n      worstPath.push(result.intermediateWealths.get(j));\n      j = Math.floor((j - 1) / 2);\n    }\n    worstPath.reverse();\n\n    const weights = [];\n    for (let i = 0; i < N_INSTRUMENTS; ++i) {\n      weights.push(result.individual.get(i));\n    }\n\n    const state = {\n      title: \"Backtest\",\n      timestamp: format(new Date(), \"yyyy-MM-dd HH:mm:ss\"),\n      metrics: { ...metrics },\n      weights: [...weights],\n      finalReturns: [...finalReturns],\n      bestPath: [...bestPath],\n      worstPath: [...worstPath]\n    };\n\n    this.setState({\n      ...this.state,\n      ...state,\n      history: [state, ...this.state.history]\n    });\n  };\n}\n","import React from \"react\";\nimport {\n  Pane,\n  Heading,\n  UnorderedList,\n  ListItem,\n  withTheme\n} from \"evergreen-ui\";\nimport { Subscribe } from \"unstated\";\nimport { SimulatorContainer } from \"../SimulatorContainer\";\n\nexport const Sidebar = withTheme(({ theme, ...rest }) => (\n  <Pane\n    height=\"100%\"\n    overflowY=\"auto\"\n    width=\"200px\"\n    background=\"tint1\"\n    borderRight={`1px solid ${theme.colors.border.default}`}\n    {...rest}\n  >\n    <Subscribe to={[SimulatorContainer]}>\n      {simulator =>\n        simulator.state.history.map((x, i) => (\n          <Pane\n            key={i}\n            padding={16}\n            borderBottom={`1px solid ${theme.colors.border.default}`}\n          >\n            <Heading size={200}>{x.title}</Heading>\n            <Heading size={100}>{x.timestamp}</Heading>\n            <UnorderedList marginBottom={0}>\n              <Metric icon=\"symbol-triangle-up\">\n                {x.metrics.expectedReturn.toFixed(2)}\n              </Metric>\n              <Metric icon=\"symbol-triangle-down\">\n                {x.metrics.expectedRisk.toFixed(2)}\n              </Metric>\n            </UnorderedList>\n          </Pane>\n        ))\n      }\n    </Subscribe>\n  </Pane>\n));\n\nconst Metric = ({ children, ...rest }) => (\n  <ListItem\n    size={100}\n    display=\"inline-block\"\n    marginTop={0}\n    marginBottom={0}\n    marginRight={32}\n    paddingLeft={0}\n    color=\"muted\"\n    fontSize={11}\n    {...rest}\n  >\n    {children}\n  </ListItem>\n);\n","import React, { useState } from \"react\";\nimport { Tablist, Pane, Tab as EvergreenTab } from \"evergreen-ui\";\n\nexport const TabPane = ({ children, ...rest }) => (\n  <Pane marginTop={16} {...rest}>\n    {children}\n  </Pane>\n);\n\nexport const Tab = ({ children, ...rest }) => (\n  <EvergreenTab {...rest}>{children}</EvergreenTab>\n);\n\nexport const Tabs = ({ children }) => {\n  const [selected, setSelected] = useState(0);\n  return (\n    <>\n      <Tablist marginX={-4}>\n        {React.Children.map(children, (x, i) => {\n          const { title, children, ...rest } = x.props;\n          return (\n            <Tab\n              key={i}\n              is=\"a\"\n              isSelected={i === selected}\n              onSelect={() => setSelected(i)}\n              {...rest}\n            >\n              {title}\n            </Tab>\n          );\n        })}\n      </Tablist>\n      {React.Children.map(\n        children,\n        (x, i) =>\n          selected === i && <TabPane key={i}>{x.props.children}</TabPane>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport {\n  Pane,\n  Small,\n  TextInput,\n  Text,\n  Heading,\n  TextInputField,\n  withTheme\n} from \"evergreen-ui\";\nimport { INSTRUMENT_NAMES } from \"../constants\";\n\nimport { Tabs, Tab } from \"../Tabs/Tabs\";\n\nexport const Parameters = withTheme(\n  ({ theme, values, handleChange, setFieldValue }) => {\n    return (\n      <>\n        <Pane\n          background=\"tint1\"\n          borderBottom={`1px solid ${theme.colors.border.default}`}\n          display=\"flex\"\n          paddingX={16}\n          paddingY={8}\n          flexDirection=\"column\"\n        >\n          <Pane flex={1}>\n            <Heading size={200}>Parameters</Heading>\n          </Pane>\n        </Pane>\n        <Pane\n          borderBottom={`1px solid ${theme.colors.border.default}`}\n          display=\"flex\"\n          padding={16}\n          flexDirection=\"column\"\n        >\n          <Tabs>\n            <Tab title=\"Portfolio\">\n              <PortfolioParameters\n                values={values}\n                handleChange={handleChange}\n              />\n            </Tab>\n            <Tab title=\"Simulation\">\n              <SimulationParameters\n                values={values}\n                handleChange={handleChange}\n              />\n            </Tab>\n            <Tab title=\"Optimizer\">\n              <OptimizerParameters\n                values={values}\n                handleChange={handleChange}\n              />\n            </Tab>\n            <Tab title=\"Reallocations\">\n              <ReallocationParameters\n                values={values}\n                handleChange={handleChange}\n              />\n            </Tab>\n            <Tab title=\"Constraints\">\n              <InstrumentConstraintParameters\n                values={values}\n                handleChange={handleChange}\n              />\n            </Tab>\n            <Tab title=\"Margins\">\n              <MarginConstraintParameters\n                values={values}\n                handleChange={handleChange}\n              />\n            </Tab>\n          </Tabs>\n        </Pane>\n      </>\n    );\n  }\n);\n\nconst Parameter = props => (\n  <TextInputField flexBasis=\"28%\" marginX={8} {...props} />\n);\n\nexport const MarginConstraintParameters = ({ values, handleChange }) => (\n  <Pane display=\"flex\" flexWrap=\"wrap\" marginX={8}>\n    <Pane>\n      <Heading marginBottom={8}>Instrument allocation constraints</Heading>\n      <Text>\n        Define constraints on how large proportion of the portfolio might be\n        invested in a particular instrument.\n      </Text>\n      <Pane is=\"table\" marginX={-4} marginY={16}>\n        <thead>\n          <tr>\n            <Text is=\"th\">Instrument</Text>\n            <Text is=\"th\">Required margin</Text>\n          </tr>\n        </thead>\n        <tbody>\n          {values.marginConstraints.map((constraint, index) => (\n            <tr key={index}>\n              <td>\n                <Small>{INSTRUMENT_NAMES[index]}</Small>\n              </td>\n              <td>\n                <TextInput\n                  type=\"number\"\n                  name={`marginConstraints.${index}`}\n                  value={values.marginConstraints[index]}\n                  onChange={handleChange}\n                  step=\"any\"\n                  min={0.0}\n                  max={1.0}\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Pane>\n    </Pane>\n  </Pane>\n);\n\nexport const InstrumentConstraintParameters = ({ values, handleChange }) => (\n  <Pane display=\"flex\" flexWrap=\"wrap\" marginX={8}>\n    <Pane>\n      <Heading marginBottom={8}>Instrument allocation constraints</Heading>\n      <Text>\n        Define constraints on how large proportion of the portfolio might be\n        invested in a particular instrument.\n      </Text>\n      <Pane is=\"table\" marginX={-4} marginY={16}>\n        <thead>\n          <tr>\n            <Text is=\"th\">Instrument</Text>\n            <Text is=\"th\">Min</Text>\n            <Text is=\"th\">Max</Text>\n          </tr>\n        </thead>\n        <tbody>\n          {values.instrumentConstraints.map((allocationConstraint, index) => (\n            <tr key={index}>\n              <td>\n                <Small>{INSTRUMENT_NAMES[index]}</Small>\n              </td>\n              <td>\n                <TextInput\n                  type=\"number\"\n                  name={`instrumentConstraints.${index}.0`}\n                  value={values.instrumentConstraints[index][0]}\n                  onChange={handleChange}\n                  step=\"any\"\n                  min={0.0}\n                  max={1.0}\n                />\n              </td>\n              <td>\n                <TextInput\n                  type=\"number\"\n                  name={`instrumentConstraints.${index}.1`}\n                  value={values.instrumentConstraints[index][1]}\n                  onChange={handleChange}\n                  step=\"any\"\n                  min={0.0}\n                  max={1.0}\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Pane>\n    </Pane>\n  </Pane>\n);\n\nexport const ReallocationParameters = ({ values, handleChange }) => (\n  <Pane display=\"flex\" flexWrap=\"wrap\" marginX={-8}>\n    {values.transactionCosts.map((transactionCost, index) => (\n      <Parameter\n        key={index}\n        name={`transactionCosts.${index}`}\n        label={INSTRUMENT_NAMES[index]}\n        placeholder=\"0.0\"\n        value={values.transactionCosts[index]}\n        type=\"number\"\n        onChange={handleChange}\n        step=\"any\"\n        min=\"0\"\n        max=\"1\"\n      />\n    ))}\n  </Pane>\n);\n\nexport const PortfolioParameters = ({ values, handleChange }) => {\n  return (\n    <Pane display=\"flex\" flexWrap=\"wrap\" marginX={-8}>\n      <Parameter\n        label=\"Risk aversion\"\n        hint=\"Set to 0.0 to optimize without considering risk.\"\n        placeholder=\"0.5\"\n        value={values.riskAversion}\n        name=\"riskAversion\"\n        type=\"number\"\n        onChange={handleChange}\n        step=\"any\"\n        min=\"0\"\n        max=\"1\"\n      />\n      <Parameter\n        label=\"Initial funding ratio\"\n        hint=\"Initial funding ratio of the portfolio.\"\n        placeholder=\"1.3\"\n        value={values.initialFundingRatio}\n        name=\"initialFundingRatio\"\n        type=\"number\"\n        onChange={handleChange}\n        step=\"any\"\n        min=\"0\"\n      />\n      <Parameter\n        label=\"Target funding ratio\"\n        hint=\"Penalize portfolios with funding ratio below this value.\"\n        placeholder=\"1.3\"\n        value={values.targetFundingRatio}\n        name=\"targetFundingRatio\"\n        type=\"number\"\n        onChange={handleChange}\n        step=\"any\"\n        min=\"0\"\n      />\n    </Pane>\n  );\n};\n\nexport const SimulationParameters = ({ values, handleChange }) => {\n  return (\n    <Pane display=\"flex\" flexWrap=\"wrap\" marginX={-8}>\n      <Parameter\n        label=\"Steps\"\n        hint=\"Number of steps to simulate.\"\n        placeholder=\"4\"\n        value={values.steps}\n        name=\"steps\"\n        type=\"number\"\n        onChange={handleChange}\n        step=\"any\"\n        min=\"1\"\n        max=\"12\"\n      />\n    </Pane>\n  );\n};\n\nexport const OptimizerParameters = ({ values, handleChange }) => {\n  return (\n    <Pane display=\"flex\" flexWrap=\"wrap\" marginX={-8}>\n      <Parameter\n        label=\"Population size\"\n        hint=\"Number of individuals in the population.\"\n        placeholder=\"100\"\n        value={values.populationSize}\n        name=\"populationSize\"\n        type=\"number\"\n        onChange={handleChange}\n        step=\"any\"\n        min=\"0\"\n      />\n      <Parameter\n        label=\"Elitism copies\"\n        hint=\"Keep a number of clones of the best individuals at iteration.\"\n        placeholder=\"2\"\n        value={values.elitismCopies}\n        name=\"elitismCopies\"\n        type=\"number\"\n        onChange={handleChange}\n        step=\"any\"\n        min=\"0\"\n      />\n      <Parameter\n        label=\"Generations\"\n        hint=\"Iterate through this many generations.\"\n        placeholder=\"100\"\n        value={values.generations}\n        name=\"generations\"\n        type=\"number\"\n        onChange={handleChange}\n        step=\"any\"\n        min=\"1\"\n      />\n      <Parameter\n        label=\"Mutation rate\"\n        hint=\"Probability of mutating a gene.\"\n        placeholder=\"0.02\"\n        value={values.mutationRate}\n        name=\"mutationRate\"\n        type=\"number\"\n        onChange={handleChange}\n        step=\"any\"\n        min=\"0\"\n        max=\"1\"\n      />\n      <Parameter\n        label=\"Crossover rate\"\n        hint=\"Probability of crossing two individuals.\"\n        placeholder=\"0.02\"\n        value={values.crossoverRate}\n        name=\"crossoverRate\"\n        type=\"number\"\n        onChange={handleChange}\n        step=\"any\"\n        min=\"0\"\n        max=\"1\"\n      />\n    </Pane>\n  );\n};\n","import Plotly from \"plotly.js-finance-dist\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\n\nexport const Plot = createPlotlyComponent(Plotly);\n","import React from \"react\";\nimport { Pane, Heading, withTheme } from \"evergreen-ui\";\n\nimport { Tabs, Tab } from \"../Tabs/Tabs\";\nimport { Subscribe } from \"unstated\";\nimport { SimulatorContainer } from \"../SimulatorContainer\";\nimport { Plot } from \"../Plot\";\nimport { INSTRUMENT_NAMES } from \"../constants\";\n\nexport const Results = withTheme(({ theme }) => (\n  <>\n    <Pane\n      background=\"tint1\"\n      borderBottom={`1px solid ${theme.colors.border.default}`}\n      display=\"flex\"\n      paddingX={16}\n      paddingY={8}\n      flexDirection=\"column\"\n    >\n      <Pane flex={1}>\n        <Heading size={200}>Results</Heading>\n      </Pane>\n    </Pane>\n    <Pane display=\"flex\" padding={16} flexDirection=\"column\">\n      <Tabs>\n        <Tab title=\"Weights\">\n          <Pane display=\"flex\" flexWrap=\"wrap\" marginX={-8} marginY={-8}>\n            <Subscribe to={[SimulatorContainer]}>\n              {simulator =>\n                simulator.state.weights.map((weight, index) => (\n                  <Card\n                    key={index}\n                    title={INSTRUMENT_NAMES[index]}\n                    value={weight.toFixed(2)}\n                  />\n                ))\n              }\n            </Subscribe>\n          </Pane>\n        </Tab>\n        <Tab title=\"Metrics\">\n          <Pane display=\"flex\" flexWrap=\"wrap\" marginX={-8} marginY={-8}>\n            <Subscribe to={[SimulatorContainer]}>\n              {simulator => (\n                <>\n                  <Card\n                    title=\"Fitness\"\n                    value={simulator.state.metrics.fitness.toFixed(2)}\n                  />\n                  <Card\n                    title=\"Expected Return\"\n                    value={simulator.state.metrics.expectedReturn.toFixed(2)}\n                  />\n                  <Card\n                    title=\"Expected Risk\"\n                    value={simulator.state.metrics.expectedRisk.toFixed(2)}\n                  />\n                </>\n              )}\n            </Subscribe>\n          </Pane>\n        </Tab>\n        <Tab title=\"Scenarios\">\n          <Pane display=\"flex\" flexWrap=\"wrap\" marginX={-8} marginY={-8}>\n            <Subscribe to={[SimulatorContainer]}>\n              {simulator => (\n                <>\n                  <Card title=\"Expected Returns\">\n                    <Plot\n                      data={[\n                        {\n                          x: simulator.state.finalReturns,\n                          type: \"histogram\"\n                        }\n                      ]}\n                    />\n                  </Card>\n                  <Card title=\"Best Scenario vs. Worst Scenario\">\n                    <Plot\n                      data={[\n                        {\n                          y: simulator.state.bestPath,\n                          type: \"scatter\",\n                          name: \"Best Scenario\"\n                        },\n                        {\n                          y: simulator.state.worstPath,\n                          type: \"scatter\",\n                          name: \"Worst Scenario\"\n                        }\n                      ]}\n                    />\n                  </Card>\n                </>\n              )}\n            </Subscribe>\n          </Pane>\n        </Tab>\n      </Tabs>\n    </Pane>\n  </>\n));\n\nconst Card = ({ title, value, children, ...rest }) => (\n  <Pane\n    background=\"tint1\"\n    padding={16}\n    flexBasis=\"15%\"\n    marginX={8}\n    marginY={8}\n    border=\"default\"\n    {...rest}\n  >\n    <Heading size={200} marginBottom={8}>\n      {title}\n    </Heading>\n    {typeof value === \"undefined\" ? (\n      children\n    ) : (\n      <Heading size={800}>{value}</Heading>\n    )}\n  </Pane>\n);\n","import React from \"react\";\nimport { Pane, Heading, Button, withTheme } from \"evergreen-ui\";\nimport { Subscribe } from \"unstated\";\nimport { Formik } from \"formik\";\n\nimport { Parameters } from \"./Parameters\";\nimport { Results } from \"./Results\";\nimport { SimulatorContainer } from \"../SimulatorContainer\";\n\nexport const Simulator = withTheme(({ theme, ...rest }) => (\n  <Subscribe to={[SimulatorContainer]}>\n    {simulator => (\n      <Formik\n        initialValues={{\n          populationSize: 10,\n          elitismCopies: 2,\n          generations: 10,\n          mutationRate: 0.02,\n          crossoverRate: 0.02,\n          steps: 4,\n          riskAversion: 0.0,\n          initialFundingRatio: 1.3,\n          targetFundingRatio: 1.3,\n          transactionCosts: [\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0\n          ],\n          instrumentConstraints: [\n            [0.0, 1.0],\n            [0.0, 1.0],\n            [0.0, 1.0],\n            [0.0, 1.0],\n            [0.0, 1.0],\n            [0.0, 1.0],\n            [0.0, 1.0],\n            [0.0, 1.0],\n            [0.0, 1.0],\n            [0.0, 1.0],\n            [0.0, 1.0],\n            [0.0, 1.0],\n            [0.0, 1.0]\n          ],\n          marginConstraints: [0.05, 0.05, 0.05, 0.05]\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          const instrumentConstraints = [\n            ...values.instrumentConstraints.map(x => x[0]),\n            ...values.instrumentConstraints.map(x => x[1])\n          ];\n          simulator.optimize({\n            ...values,\n            instrumentConstraints\n          });\n        }}\n      >\n        {({\n          isSubmitting,\n          handleSubmit,\n          values,\n          handleChange,\n          setFieldValue\n        }) => (\n          <form onSubmit={handleSubmit}>\n            <Pane display=\"flex\" flexDirection=\"column\" {...rest}>\n              <Pane\n                borderBottom={`1px solid ${theme.colors.border.default}`}\n                display=\"flex\"\n                padding={16}\n                alignItems=\"center\"\n              >\n                <Pane flex={1}>\n                  <Heading>Backtest</Heading>\n                </Pane>\n                <Pane>\n                  <Button appearance=\"primary\" iconBefore=\"play\" type=\"submit\">\n                    Run\n                  </Button>\n                </Pane>\n              </Pane>\n              <Parameters\n                values={values}\n                handleChange={handleChange}\n                setFieldValue={setFieldValue}\n              />\n              <Results />\n            </Pane>\n          </form>\n        )}\n      </Formik>\n    )}\n  </Subscribe>\n));\n","import React from \"react\";\nimport { Pane, Spinner } from \"evergreen-ui\";\nimport { Header } from \"./Header/Header\";\nimport { Sidebar } from \"./Sidebar/Sidebar\";\nimport { Simulator } from \"./Simulator/Simulator\";\nimport { Subscribe } from \"unstated\";\nimport { SimulatorContainer } from \"./SimulatorContainer\";\n\nconst HEADER_HEIGHT = \"52px\";\n\nconst App = () => {\n  return (\n    <Subscribe to={[SimulatorContainer]}>\n      {simulator =>\n        simulator.loading ? (\n          <Spinner\n            transform=\"translate(-50%, -50%)\"\n            position=\"absolute\"\n            left=\"50%\"\n            top=\"50%\"\n          />\n        ) : (\n          <Pane height=\"100vh\" display=\"flex\" flexDirection=\"column\">\n            <Header />\n            <Pane display=\"flex\" height={`calc(100% - ${HEADER_HEIGHT})`}>\n              <Pane flex={0} height=\"100%\">\n                <Sidebar />\n              </Pane>\n              <Pane flex={1} height=\"100%\">\n                <Simulator />\n              </Pane>\n            </Pane>\n          </Pane>\n        )\n      }\n    </Subscribe>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"unstated\";\n\nReactDOM.render(\n  <Provider>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}