{"version":3,"sources":["Header/Header.js","libcapgen.js","SimulatorContainer.js","Sidebar/Sidebar.js","Tabs/Tabs.js","Simulator/Parameters.js","Simulator/Results.js","Simulator/Simulator.js","App.js","serviceWorker.js","index.js"],"names":["Header","withTheme","_ref","theme","rest","Object","objectWithoutProperties","react_default","a","createElement","Pane","assign","display","padding","background","palette","blue","base","flex","alignItems","Heading","color","colors","border","default","_libcapgen","window","libcapgen","instance","callbacks","onRuntimeInitialized","optimize","apply","arguments","map","c","Promise","resolve","push","SimulatorContainer","_Container","_getPrototypeOf2","_this","classCallCheck","this","_len","length","_args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","concat","state","history","loading","metrics","totalReturn","risk","asyncToGenerator","regenerator_default","mark","_callee","result","_args2","wrap","_context","prev","next","sent","setState","objectSpread","title","timestamp","format","Date","toConsumableArray","stop","inherits","Container","Sidebar","height","overflowY","width","borderRight","unstated_es","to","simulator","x","i","key","borderBottom","size","UnorderedList","marginBottom","Sidebar_Metric","icon","toFixed","Metric","_ref2","children","ListItem","marginTop","marginRight","paddingLeft","fontSize","TabPane","Tab","src_Tab","Tabs","_ref3","_useState","useState","_useState2","slicedToArray","selected","setSelected","Fragment","Tablist","marginX","_x$props","props","Tabs_Tab","is","isSelected","onSelect","Tabs_TabPane","INITIAL_PARAMETERS","populationSize","elitismCopies","generations","mutationRate","crossoverRate","steps","riskAversion","initialFundingRatio","targetFundingRatio","Parameters","paddingX","paddingY","flexDirection","Tabs_Tabs","Parameters_PortfolioParameters","Parameters_SimulationParameters","Parameters_OptimizerParameters","disabled","Parameter","TextInputField","flexBasis","PortfolioParameters","flexWrap","Parameters_Parameter","label","hint","placeholder","value","SimulationParameters","OptimizerParameters","Results","marginY","Results_Metric","Simulator","Button","appearance","iconBefore","onClick","App","Spinner","transform","position","left","top","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8f0077c4.chunk.js","sourcesContent":["import React from \"react\";\nimport { Pane, Heading, withTheme } from \"evergreen-ui\";\n\nexport const Header = withTheme(({ theme, ...rest }) => (\n  <Pane\n    display=\"flex\"\n    padding={16}\n    background={theme.palette.blue.base}\n    {...rest}\n  >\n    <Pane flex={1} alignItems=\"center\" display=\"flex\">\n      <Heading color={theme.colors.border.default}>Capgen</Heading>\n    </Pane>\n    <Pane />\n  </Pane>\n));\n","const _libcapgen = window.libcapgen();\n\nlet instance = null;\nconst callbacks = [];\n_libcapgen.onRuntimeInitialized = () => {\n  instance = {\n    optimize: (...args) => _libcapgen.optimize(...args)\n  };\n  callbacks.map(c => c());\n};\n\nexport const libcapgen = () =>\n  new Promise(resolve => {\n    if (instance === null) {\n      callbacks.push(() => resolve(instance));\n    } else {\n      resolve(instance);\n    }\n  });\n","import { Container } from \"unstated\";\nimport { libcapgen } from \"./libcapgen\";\nimport { format } from \"date-fns\";\n\nexport class SimulatorContainer extends Container {\n  state = {\n    history: [],\n    loading: false,\n    metrics: {\n      totalReturn: 0,\n      risk: 0\n    }\n  };\n  optimize = async (...args) => {\n    const instance = await libcapgen();\n    const result = instance.optimize(...args);\n    const metrics = {\n      totalReturn: result.totalReturn,\n      risk: result.risk\n    };\n    this.setState({\n      ...this.state,\n      history: [\n        {\n          title: \"Backtest\",\n          timestamp: format(new Date(), \"yyyy-MM-dd HH:mm:ss\"),\n          metrics: { ...metrics }\n        },\n        ...this.state.history\n      ],\n      metrics: { ...metrics }\n    });\n  };\n}\n","import React from \"react\";\nimport {\n  Pane,\n  Heading,\n  UnorderedList,\n  Icon,\n  ListItem,\n  withTheme\n} from \"evergreen-ui\";\nimport { Subscribe } from \"unstated\";\nimport { SimulatorContainer } from \"../SimulatorContainer\";\n\nexport const Sidebar = withTheme(({ theme, ...rest }) => (\n  <Pane\n    height=\"100%\"\n    overflowY=\"auto\"\n    width=\"200px\"\n    background=\"tint1\"\n    borderRight={`1px solid ${theme.colors.border.default}`}\n    {...rest}\n  >\n    <Subscribe to={[SimulatorContainer]}>\n      {simulator =>\n        simulator.state.history.map((x, i) => (\n          <Pane\n            key={i}\n            padding={16}\n            borderBottom={`1px solid ${theme.colors.border.default}`}\n          >\n            <Heading size={200}>{x.title}</Heading>\n            <Heading size={100}>{x.timestamp}</Heading>\n            <UnorderedList marginBottom={0}>\n              <Metric icon=\"symbol-triangle-up\">\n                {x.metrics.totalReturn.toFixed(2)}\n              </Metric>\n              <Metric icon=\"symbol-triangle-down\">\n                {x.metrics.risk.toFixed(2)}\n              </Metric>\n            </UnorderedList>\n          </Pane>\n        ))\n      }\n    </Subscribe>\n  </Pane>\n));\n\nconst Metric = ({ children, ...rest }) => (\n  <ListItem\n    size={100}\n    display=\"inline-block\"\n    marginTop={0}\n    marginBottom={0}\n    marginRight={32}\n    paddingLeft={0}\n    color=\"muted\"\n    fontSize={11}\n    {...rest}\n  >\n    {children}\n  </ListItem>\n);\n","import React, { useState } from \"react\";\nimport { Tablist, Pane, Tab as EvergreenTab } from \"evergreen-ui\";\n\nexport const TabPane = ({ children, ...rest }) => (\n  <Pane marginTop={16} {...rest}>\n    {children}\n  </Pane>\n);\n\nexport const Tab = ({ children, ...rest }) => (\n  <EvergreenTab {...rest}>{children}</EvergreenTab>\n);\n\nexport const Tabs = ({ children }) => {\n  const [selected, setSelected] = useState(0);\n  return (\n    <>\n      <Tablist marginX={-4}>\n        {children.map((x, i) => {\n          const { title, children, ...rest } = x.props;\n          return (\n            <Tab\n              key={i}\n              is=\"a\"\n              isSelected={i === selected}\n              onSelect={() => setSelected(i)}\n              {...rest}\n            >\n              {title}\n            </Tab>\n          );\n        })}\n      </Tablist>\n      {children.map(\n        (x, i) =>\n          selected === i && <TabPane key={i}>{x.props.children}</TabPane>\n      )}\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Pane, Heading, TextInputField, withTheme } from \"evergreen-ui\";\n\nimport { Tabs, Tab } from \"../Tabs/Tabs\";\n\nexport const INITIAL_PARAMETERS = {\n  populationSize: 100,\n  elitismCopies: 2,\n  generations: 100,\n  mutationRate: 0.02,\n  crossoverRate: 0.02,\n  steps: 4,\n  riskAversion: 0.5,\n  initialFundingRatio: 1.3,\n  targetFundingRatio: 1.3\n};\n\nexport const Parameters = withTheme(({ theme }) => {\n  const [parameters, setParameters] = useState({ ...INITIAL_PARAMETERS });\n  return (\n    <>\n      <Pane\n        background=\"tint1\"\n        borderBottom={`1px solid ${theme.colors.border.default}`}\n        display=\"flex\"\n        paddingX={16}\n        paddingY={8}\n        flexDirection=\"column\"\n      >\n        <Pane flex={1}>\n          <Heading size={200}>Parameters</Heading>\n        </Pane>\n      </Pane>\n      <Pane\n        borderBottom={`1px solid ${theme.colors.border.default}`}\n        display=\"flex\"\n        padding={16}\n        flexDirection=\"column\"\n      >\n        <Tabs>\n          <Tab title=\"Portfolio\">\n            <PortfolioParameters />\n          </Tab>\n          <Tab title=\"Simulation\">\n            <SimulationParameters />\n          </Tab>\n          <Tab title=\"Optimizer\">\n            <OptimizerParameters />\n          </Tab>\n          <Tab title=\"Correlations\" disabled={true}>\n            Correlations\n          </Tab>\n        </Tabs>\n      </Pane>\n    </>\n  );\n});\n\nconst Parameter = props => (\n  <TextInputField flexBasis=\"28%\" marginX={8} {...props} />\n);\n\nexport const PortfolioParameters = () => {\n  return (\n    <Pane display=\"flex\" flexWrap=\"wrap\" marginX={-8}>\n      <Parameter\n        label=\"Risk aversion\"\n        hint=\"Set to 0.0 to optimize without considering risk.\"\n        placeholder=\"0.5\"\n        value={0.5}\n      />\n      <Parameter\n        label=\"Initial funding ratio\"\n        hint=\"Initial funding ratio of the portfolio.\"\n        placeholder=\"1.3\"\n        value={1.3}\n      />\n      <Parameter\n        label=\"Target funding ratio\"\n        hint=\"Penalize portfolios with funding ratio below this value.\"\n        placeholder=\"1.3\"\n        value={1.3}\n      />\n    </Pane>\n  );\n};\n\nexport const SimulationParameters = () => {\n  return (\n    <Pane display=\"flex\" flexWrap=\"wrap\" marginX={-8}>\n      <Parameter\n        label=\"Steps\"\n        hint=\"Number of steps to simulate.\"\n        placeholder=\"4\"\n        value={4}\n      />\n    </Pane>\n  );\n};\n\nexport const OptimizerParameters = () => {\n  return (\n    <Pane display=\"flex\" flexWrap=\"wrap\" marginX={-8}>\n      <Parameter\n        label=\"Population size\"\n        hint=\"Number of individuals in the population.\"\n        placeholder=\"100\"\n        value={100}\n      />\n      <Parameter\n        label=\"Elitism copies\"\n        hint=\"Keep a number of clones of the best individuals at iteration.\"\n        placeholder=\"2\"\n        value={2}\n      />\n      <Parameter\n        label=\"Generations\"\n        hint=\"Iterate through this many generations.\"\n        placeholder=\"100\"\n        value={100}\n      />\n      <Parameter\n        label=\"Mutation rate\"\n        hint=\"Probability of mutating a gene.\"\n        placeholder=\"0.02\"\n        value={0.02}\n      />\n      <Parameter\n        label=\"Crossover rate\"\n        hint=\"Probability of crossing two individuals.\"\n        placeholder=\"0.02\"\n        value={0.02}\n      />\n    </Pane>\n  );\n};\n","import React from \"react\";\nimport { Pane, Card, Heading, withTheme } from \"evergreen-ui\";\nimport { Tabs, Tab } from \"../Tabs/Tabs\";\nimport { Subscribe } from \"unstated\";\nimport { SimulatorContainer } from \"../SimulatorContainer\";\n\nexport const Results = withTheme(({ theme }) => (\n  <>\n    <Pane\n      background=\"tint1\"\n      borderBottom={`1px solid ${theme.colors.border.default}`}\n      display=\"flex\"\n      paddingX={16}\n      paddingY={8}\n      flexDirection=\"column\"\n    >\n      <Pane flex={1}>\n        <Heading size={200}>Results</Heading>\n      </Pane>\n    </Pane>\n    <Pane display=\"flex\" padding={16} flexDirection=\"column\">\n      <Tabs>\n        <Tab title=\"Metrics\">\n          <Pane display=\"flex\" flexWrap=\"wrap\" marginX={-8} marginY={-8}>\n            <Subscribe to={[SimulatorContainer]}>\n              {simulator => (\n                <>\n                  <Metric\n                    title=\"Expected Return\"\n                    value={simulator.state.metrics.totalReturn.toFixed(2)}\n                  />\n                  <Metric\n                    title=\"Expected Risk\"\n                    value={simulator.state.metrics.risk.toFixed(2)}\n                  />\n                </>\n              )}\n            </Subscribe>\n          </Pane>\n        </Tab>\n        <Tab title=\"Performance\">Performance</Tab>\n        <Tab title=\"Weights\">Weights</Tab>\n      </Tabs>\n    </Pane>\n  </>\n));\n\nconst Metric = ({ title, value, children, ...rest }) => (\n  <Pane\n    background=\"tint1\"\n    padding={16}\n    flexBasis=\"28%\"\n    marginX={8}\n    marginY={8}\n    border=\"default\"\n    {...rest}\n  >\n    <Heading size={200} marginBottom={8}>\n      {title}\n    </Heading>\n    {typeof value === \"undefined\" ? (\n      children\n    ) : (\n      <Heading size={800}>{value}</Heading>\n    )}\n  </Pane>\n);\n","import React from \"react\";\nimport { Pane, Heading, Button, withTheme } from \"evergreen-ui\";\nimport { Subscribe } from \"unstated\";\n\nimport { Parameters } from \"./Parameters\";\nimport { Results } from \"./Results\";\nimport { libcapgen } from \"../libcapgen\";\nimport { SimulatorContainer } from \"../SimulatorContainer\";\n\nexport const Simulator = withTheme(({ theme, ...rest }) => (\n  <Pane display=\"flex\" flexDirection=\"column\" {...rest}>\n    <Pane\n      borderBottom={`1px solid ${theme.colors.border.default}`}\n      display=\"flex\"\n      padding={16}\n      alignItems=\"center\"\n    >\n      <Pane flex={1}>\n        <Heading>Backtest</Heading>\n      </Pane>\n      <Pane>\n        <Subscribe to={[SimulatorContainer]}>\n          {simulator => (\n            <Button\n              appearance=\"primary\"\n              iconBefore=\"play\"\n              onClick={() =>\n                simulator.optimize({\n                  populationSize: 10,\n                  elitismCopies: 2,\n                  generations: 10,\n                  mutationRate: 0.02,\n                  crossoverRate: 0.02,\n                  steps: 4,\n                  riskAversion: 0.5,\n                  initialFundingRatio: 1.3,\n                  targetFundingRatio: 1.3\n                })\n              }\n            >\n              Run\n            </Button>\n          )}\n        </Subscribe>\n      </Pane>\n    </Pane>\n    <Parameters />\n    <Results />\n  </Pane>\n));\n","import React, { useState, useEffect } from \"react\";\nimport { Pane, Spinner } from \"evergreen-ui\";\nimport { Header } from \"./Header/Header\";\nimport { Sidebar } from \"./Sidebar/Sidebar\";\nimport { Simulator } from \"./Simulator/Simulator\";\nimport { libcapgen } from \"./libcapgen\";\nimport { Subscribe } from \"unstated\";\nimport { SimulatorContainer } from \"./SimulatorContainer\";\n\nconst HEADER_HEIGHT = \"52px\";\n\nconst App = () => {\n  return (\n    <Subscribe to={[SimulatorContainer]}>\n      {simulator =>\n        simulator.loading ? (\n          <Spinner\n            transform=\"translate(-50%, -50%)\"\n            position=\"absolute\"\n            left=\"50%\"\n            top=\"50%\"\n          />\n        ) : (\n          <Pane height=\"100vh\" display=\"flex\" flexDirection=\"column\">\n            <Header />\n            <Pane display=\"flex\" height={`calc(100% - ${HEADER_HEIGHT})`}>\n              <Pane flex={0} height=\"100%\">\n                <Sidebar />\n              </Pane>\n              <Pane flex={1}>\n                <Simulator />\n              </Pane>\n            </Pane>\n          </Pane>\n        )\n      }\n    </Subscribe>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"unstated\";\n\nReactDOM.render(\n  <Provider>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}