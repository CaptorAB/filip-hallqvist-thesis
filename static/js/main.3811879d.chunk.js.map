{"version":3,"sources":["Header/Header.js","libcapgen.js","SimulatorContainer.js","Sidebar/Sidebar.js","constants.js","Tabs/Tabs.js","Simulator/Parameters.js","Simulator/Results.js","Simulator/Simulator.js","App.js","serviceWorker.js","index.js"],"names":["Header","withTheme","_ref","theme","rest","Object","objectWithoutProperties","react_default","a","createElement","Pane","assign","display","padding","background","palette","blue","base","flex","alignItems","Heading","color","colors","border","default","_libcapgen","window","libcapgen","instance","callbacks","onRuntimeInitialized","optimize","apply","arguments","map","c","Promise","resolve","push","SimulatorContainer","_Container","_getPrototypeOf2","_this","classCallCheck","this","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","concat","state","history","loading","metrics","fitness","expectedReturn","expectedRisk","scenarios","asyncToGenerator","regenerator_default","mark","_callee","options","result","wrap","_context","prev","next","sent","setState","objectSpread","title","timestamp","format","Date","toConsumableArray","stop","_x","inherits","Container","Sidebar","height","overflowY","width","borderRight","unstated_es","to","simulator","x","i","key","borderBottom","size","UnorderedList","marginBottom","Sidebar_Metric","icon","toFixed","Metric","_ref2","children","ListItem","marginTop","marginRight","paddingLeft","fontSize","INSTRUMENT_NAMES","TabPane","Tab","src_Tab","Tabs","_ref3","_useState","useState","_useState2","slicedToArray","selected","setSelected","Fragment","Tablist","marginX","React","Children","_x$props","props","Tabs_Tab","is","isSelected","onSelect","Tabs_TabPane","Parameters","values","handleChange","paddingX","paddingY","flexDirection","Tabs_Tabs","Parameters_PortfolioParameters","Parameters_SimulationParameters","Parameters_OptimizerParameters","Parameters_ReallocationParameters","Parameter","TextInputField","flexBasis","ReallocationParameters","flexWrap","transactionCosts","transactionCost","index","Parameters_Parameter","name","label","placeholder","value","type","onChange","step","min","max","PortfolioParameters","hint","riskAversion","initialFundingRatio","targetFundingRatio","SimulationParameters","_ref4","steps","OptimizerParameters","_ref5","populationSize","elitismCopies","generations","mutationRate","crossoverRate","Results","marginY","Results_Metric","Simulator","formik_esm","initialValues","onSubmit","setSubmitting","isSubmitting","handleSubmit","Button","appearance","iconBefore","App","Spinner","transform","position","left","top","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3811879d.chunk.js","sourcesContent":["import React from \"react\";\nimport { Pane, Heading, withTheme } from \"evergreen-ui\";\n\nexport const Header = withTheme(({ theme, ...rest }) => (\n  <Pane\n    display=\"flex\"\n    padding={16}\n    background={theme.palette.blue.base}\n    {...rest}\n  >\n    <Pane flex={1} alignItems=\"center\" display=\"flex\">\n      <Heading color={theme.colors.border.default}>Capgen</Heading>\n    </Pane>\n    <Pane />\n  </Pane>\n));\n","const _libcapgen = window.libcapgen();\n\nlet instance = null;\nconst callbacks = [];\n_libcapgen.onRuntimeInitialized = () => {\n  instance = {\n    optimize: (...args) => _libcapgen.optimize(...args)\n  };\n  callbacks.map(c => c());\n};\n\nexport const libcapgen = () =>\n  new Promise(resolve => {\n    if (instance === null) {\n      callbacks.push(() => resolve(instance));\n    } else {\n      resolve(instance);\n    }\n  });\n","import { Container } from \"unstated\";\n\nimport { libcapgen } from \"./libcapgen\";\nimport { format } from \"date-fns\";\n\n/*\nconst _preOrderTraversal = (array, current, path, paths) => {\n  path.push(array[current]);\n  const left = 2 * current + 1;\n  const right = 2 * current + 2;\n  if (left <= array.length && right <= array.length) {\n    _preOrderTraversal(array, left, [...path], paths);\n    _preOrderTraversal(array, right, [...path], paths);\n  } else {\n    paths.push(path);\n  }\n};\n\nconst preOrderTraversal = array => {\n  const paths = [];\n  _preOrderTraversal(array, 0, [], paths);\n  return paths;\n};\n*/\n\nexport class SimulatorContainer extends Container {\n  state = {\n    history: [],\n    loading: false,\n    metrics: {\n      fitness: 0,\n      expectedReturn: 0,\n      expectedRisk: 0\n    },\n    scenarios: []\n  };\n  optimize = async options => {\n    const instance = await libcapgen();\n    const result = instance.optimize(options);\n    const metrics = {\n      fitness: result.fitness,\n      expectedReturn: result.expectedReturn,\n      expectedRisk: result.expectedRisk\n    };\n\n    this.setState({\n      ...this.state,\n      history: [\n        {\n          title: \"Backtest\",\n          timestamp: format(new Date(), \"yyyy-MM-dd HH:mm:ss\"),\n          metrics: { ...metrics }\n        },\n        ...this.state.history\n      ],\n      metrics: { ...metrics }\n    });\n  };\n}\n","import React from \"react\";\nimport {\n  Pane,\n  Heading,\n  UnorderedList,\n  ListItem,\n  withTheme\n} from \"evergreen-ui\";\nimport { Subscribe } from \"unstated\";\nimport { SimulatorContainer } from \"../SimulatorContainer\";\n\nexport const Sidebar = withTheme(({ theme, ...rest }) => (\n  <Pane\n    height=\"100%\"\n    overflowY=\"auto\"\n    width=\"200px\"\n    background=\"tint1\"\n    borderRight={`1px solid ${theme.colors.border.default}`}\n    {...rest}\n  >\n    <Subscribe to={[SimulatorContainer]}>\n      {simulator =>\n        simulator.state.history.map((x, i) => (\n          <Pane\n            key={i}\n            padding={16}\n            borderBottom={`1px solid ${theme.colors.border.default}`}\n          >\n            <Heading size={200}>{x.title}</Heading>\n            <Heading size={100}>{x.timestamp}</Heading>\n            <UnorderedList marginBottom={0}>\n              <Metric icon=\"symbol-triangle-up\">\n                {x.metrics.expectedReturn.toFixed(2)}\n              </Metric>\n              <Metric icon=\"symbol-triangle-down\">\n                {x.metrics.expectedRisk.toFixed(2)}\n              </Metric>\n            </UnorderedList>\n          </Pane>\n        ))\n      }\n    </Subscribe>\n  </Pane>\n));\n\nconst Metric = ({ children, ...rest }) => (\n  <ListItem\n    size={100}\n    display=\"inline-block\"\n    marginTop={0}\n    marginBottom={0}\n    marginRight={32}\n    paddingLeft={0}\n    color=\"muted\"\n    fontSize={11}\n    {...rest}\n  >\n    {children}\n  </ListItem>\n);\n","export const N_INSTRUMENTS = 2;\nexport const N_RISKS = 8;\n\nexport const DOMESTIC_EQUITY_INDEX = 0;\nexport const GLOBAL_EQUITY_INDEX = 1;\nexport const REAL_ESTATE_INDEX = 2;\nexport const ALTERNATIVE_INDEX = 3;\nexport const CREDIT_INDEX = 4;\nexport const BONDS_2Y_INDEX = 5;\nexport const BONDS_5Y_INDEX = 6;\nexport const CASH_INDEX = 7;\nexport const FTA_INDEX = 8;\nexport const DOMESTIC_EQUITY_FUTURE_INDEX = 9;\nexport const INTEREST_RATE_SWAP_2Y_INDEX = 10;\nexport const INTEREST_RATE_SWAP_5Y_INDEX = 11;\nexport const INTEREST_RATE_SWAP_20Y_INDEX = 12;\n\nexport const DOMESTIC_MARKET_RISK_INDEX = 0;\nexport const GLOBAL_MARKET_RISK_INDEX = 1;\nexport const ALTERNATIVE_RISK_INDEX = 2;\nexport const INTEREST_RATE_2Y_RISK_INDEX = 3;\nexport const INTEREST_RATE_5Y_RISK_INDEX = 4;\nexport const INTEREST_RATE_20Y_RISK_INDEX = 5;\nexport const CREDIT_RISK_INDEX = 6;\nexport const CASH_RISK_INDEX = 7;\n\nexport const INSTRUMENT_NAMES = [\n  \"Domestic Equity\",\n  \"Global Equity\",\n  \"Real Estate\",\n  \"Alternative\",\n  \"Credit\",\n  \"Bonds 2-Year\",\n  \"Bonds 5-Year\",\n  \"Cash\",\n  \"FTA\",\n  \"Domestic Equity Futures\",\n  \"Interest Rate Swap 2-Year\",\n  \"Interest Rate Swap 5-Year\",\n  \"Interest Rate Swap 20-Year\"\n];\n","import React, { useState } from \"react\";\nimport { Tablist, Pane, Tab as EvergreenTab } from \"evergreen-ui\";\n\nexport const TabPane = ({ children, ...rest }) => (\n  <Pane marginTop={16} {...rest}>\n    {children}\n  </Pane>\n);\n\nexport const Tab = ({ children, ...rest }) => (\n  <EvergreenTab {...rest}>{children}</EvergreenTab>\n);\n\nexport const Tabs = ({ children }) => {\n  const [selected, setSelected] = useState(0);\n  return (\n    <>\n      <Tablist marginX={-4}>\n        {React.Children.map(children, (x, i) => {\n          const { title, children, ...rest } = x.props;\n          return (\n            <Tab\n              key={i}\n              is=\"a\"\n              isSelected={i === selected}\n              onSelect={() => setSelected(i)}\n              {...rest}\n            >\n              {title}\n            </Tab>\n          );\n        })}\n      </Tablist>\n      {React.Children.map(\n        children,\n        (x, i) =>\n          selected === i && <TabPane key={i}>{x.props.children}</TabPane>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport { Pane, Heading, TextInputField, withTheme } from \"evergreen-ui\";\nimport { INSTRUMENT_NAMES } from \"../constants\";\n\nimport { Tabs, Tab } from \"../Tabs/Tabs\";\n\nexport const Parameters = withTheme(({ theme, values, handleChange }) => {\n  return (\n    <>\n      <Pane\n        background=\"tint1\"\n        borderBottom={`1px solid ${theme.colors.border.default}`}\n        display=\"flex\"\n        paddingX={16}\n        paddingY={8}\n        flexDirection=\"column\"\n      >\n        <Pane flex={1}>\n          <Heading size={200}>Parameters</Heading>\n        </Pane>\n      </Pane>\n      <Pane\n        borderBottom={`1px solid ${theme.colors.border.default}`}\n        display=\"flex\"\n        padding={16}\n        flexDirection=\"column\"\n      >\n        <Tabs>\n          <Tab title=\"Portfolio\">\n            <PortfolioParameters values={values} handleChange={handleChange} />\n          </Tab>\n          <Tab title=\"Simulation\">\n            <SimulationParameters values={values} handleChange={handleChange} />\n          </Tab>\n          <Tab title=\"Optimizer\">\n            <OptimizerParameters values={values} handleChange={handleChange} />\n          </Tab>\n          <Tab title=\"Reallocations\">\n            <ReallocationParameters\n              values={values}\n              handleChange={handleChange}\n            />\n          </Tab>\n        </Tabs>\n      </Pane>\n    </>\n  );\n});\n\nconst Parameter = props => (\n  <TextInputField flexBasis=\"28%\" marginX={8} {...props} />\n);\n\nexport const ReallocationParameters = ({ values, handleChange }) => (\n  <Pane display=\"flex\" flexWrap=\"wrap\" marginX={-8}>\n    {values.transactionCosts.map((transactionCost, index) => (\n      <Parameter\n        key={index}\n        name={`transactionCosts.${index}`}\n        label={INSTRUMENT_NAMES[index]}\n        placeholder=\"0.0\"\n        value={values.transactionCosts[index]}\n        type=\"number\"\n        onChange={handleChange}\n        step=\"any\"\n        min=\"0\"\n        max=\"1\"\n      />\n    ))}\n  </Pane>\n);\n\nexport const PortfolioParameters = ({ values, handleChange }) => {\n  return (\n    <Pane display=\"flex\" flexWrap=\"wrap\" marginX={-8}>\n      <Parameter\n        label=\"Risk aversion\"\n        hint=\"Set to 0.0 to optimize without considering risk.\"\n        placeholder=\"0.5\"\n        value={values.riskAversion}\n        name=\"riskAversion\"\n        type=\"number\"\n        onChange={handleChange}\n        step=\"any\"\n        min=\"0\"\n        max=\"1\"\n      />\n      <Parameter\n        label=\"Initial funding ratio\"\n        hint=\"Initial funding ratio of the portfolio.\"\n        placeholder=\"1.3\"\n        value={values.initialFundingRatio}\n        name=\"initialFundingRatio\"\n        type=\"number\"\n        onChange={handleChange}\n        step=\"any\"\n        min=\"0\"\n      />\n      <Parameter\n        label=\"Target funding ratio\"\n        hint=\"Penalize portfolios with funding ratio below this value.\"\n        placeholder=\"1.3\"\n        value={values.targetFundingRatio}\n        name=\"targetFundingRatio\"\n        type=\"number\"\n        onChange={handleChange}\n        step=\"any\"\n        min=\"0\"\n      />\n    </Pane>\n  );\n};\n\nexport const SimulationParameters = ({ values, handleChange }) => {\n  return (\n    <Pane display=\"flex\" flexWrap=\"wrap\" marginX={-8}>\n      <Parameter\n        label=\"Steps\"\n        hint=\"Number of steps to simulate.\"\n        placeholder=\"4\"\n        value={values.steps}\n        name=\"steps\"\n        type=\"number\"\n        onChange={handleChange}\n        step=\"any\"\n        min=\"1\"\n        max=\"12\"\n      />\n    </Pane>\n  );\n};\n\nexport const OptimizerParameters = ({ values, handleChange }) => {\n  return (\n    <Pane display=\"flex\" flexWrap=\"wrap\" marginX={-8}>\n      <Parameter\n        label=\"Population size\"\n        hint=\"Number of individuals in the population.\"\n        placeholder=\"100\"\n        value={values.populationSize}\n        name=\"populationSize\"\n        type=\"number\"\n        onChange={handleChange}\n        step=\"any\"\n        min=\"0\"\n      />\n      <Parameter\n        label=\"Elitism copies\"\n        hint=\"Keep a number of clones of the best individuals at iteration.\"\n        placeholder=\"2\"\n        value={values.elitismCopies}\n        name=\"elitismCopies\"\n        type=\"number\"\n        onChange={handleChange}\n        step=\"any\"\n        min=\"0\"\n      />\n      <Parameter\n        label=\"Generations\"\n        hint=\"Iterate through this many generations.\"\n        placeholder=\"100\"\n        value={values.generations}\n        name=\"generations\"\n        type=\"number\"\n        onChange={handleChange}\n        step=\"any\"\n        min=\"1\"\n      />\n      <Parameter\n        label=\"Mutation rate\"\n        hint=\"Probability of mutating a gene.\"\n        placeholder=\"0.02\"\n        value={values.mutationRate}\n        name=\"mutationRate\"\n        type=\"number\"\n        onChange={handleChange}\n        step=\"any\"\n        min=\"0\"\n        max=\"1\"\n      />\n      <Parameter\n        label=\"Crossover rate\"\n        hint=\"Probability of crossing two individuals.\"\n        placeholder=\"0.02\"\n        value={values.crossoverRate}\n        name=\"crossoverRate\"\n        type=\"number\"\n        onChange={handleChange}\n        step=\"any\"\n        min=\"0\"\n        max=\"1\"\n      />\n    </Pane>\n  );\n};\n","import React from \"react\";\nimport { Pane, Heading, withTheme } from \"evergreen-ui\";\n\nimport { Tabs, Tab } from \"../Tabs/Tabs\";\nimport { Subscribe } from \"unstated\";\nimport { SimulatorContainer } from \"../SimulatorContainer\";\n\nexport const Results = withTheme(({ theme }) => (\n  <>\n    <Pane\n      background=\"tint1\"\n      borderBottom={`1px solid ${theme.colors.border.default}`}\n      display=\"flex\"\n      paddingX={16}\n      paddingY={8}\n      flexDirection=\"column\"\n    >\n      <Pane flex={1}>\n        <Heading size={200}>Results</Heading>\n      </Pane>\n    </Pane>\n    <Pane display=\"flex\" padding={16} flexDirection=\"column\">\n      <Tabs>\n        <Tab title=\"Metrics\">\n          <Pane display=\"flex\" flexWrap=\"wrap\" marginX={-8} marginY={-8}>\n            <Subscribe to={[SimulatorContainer]}>\n              {simulator => (\n                <>\n                  <Metric\n                    title=\"Fitness\"\n                    value={simulator.state.metrics.fitness.toFixed(2)}\n                  />\n                  <Metric\n                    title=\"Expected Return\"\n                    value={simulator.state.metrics.expectedReturn.toFixed(2)}\n                  />\n                  <Metric\n                    title=\"Expected Risk\"\n                    value={simulator.state.metrics.expectedRisk.toFixed(2)}\n                  />\n                </>\n              )}\n            </Subscribe>\n          </Pane>\n        </Tab>\n        {/*\n        <Tab title=\"Performance\">\n          <Subscribe to={[SimulatorContainer]}>\n            {simulator => (\n              <PerformancePlot\n                scenarios={simulator.state.scenarios}\n                current={0}\n                title=\"Domestic Equity\"\n              />\n            )}\n          </Subscribe>\n        </Tab>\n        <Tab title=\"Weights\">Weights</Tab>\n            */}\n      </Tabs>\n    </Pane>\n  </>\n));\n\nconst Metric = ({ title, value, children, ...rest }) => (\n  <Pane\n    background=\"tint1\"\n    padding={16}\n    flexBasis=\"28%\"\n    marginX={8}\n    marginY={8}\n    border=\"default\"\n    {...rest}\n  >\n    <Heading size={200} marginBottom={8}>\n      {title}\n    </Heading>\n    {typeof value === \"undefined\" ? (\n      children\n    ) : (\n      <Heading size={800}>{value}</Heading>\n    )}\n  </Pane>\n);\n","import React from \"react\";\nimport { Pane, Heading, Button, withTheme } from \"evergreen-ui\";\nimport { Subscribe } from \"unstated\";\nimport { Formik } from \"formik\";\n\nimport { Parameters } from \"./Parameters\";\nimport { Results } from \"./Results\";\nimport { SimulatorContainer } from \"../SimulatorContainer\";\n\nexport const Simulator = withTheme(({ theme, ...rest }) => (\n  <Subscribe to={[SimulatorContainer]}>\n    {simulator => (\n      <Formik\n        initialValues={{\n          populationSize: 10,\n          elitismCopies: 2,\n          generations: 10,\n          mutationRate: 0.02,\n          crossoverRate: 0.02,\n          steps: 4,\n          riskAversion: 0.0,\n          initialFundingRatio: 1.3,\n          targetFundingRatio: 1.3,\n          transactionCosts: [\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            0.0\n          ]\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          simulator.optimize(values);\n        }}\n      >\n        {({ isSubmitting, handleSubmit, values, handleChange }) => (\n          <form onSubmit={handleSubmit}>\n            <Pane display=\"flex\" flexDirection=\"column\" {...rest}>\n              <Pane\n                borderBottom={`1px solid ${theme.colors.border.default}`}\n                display=\"flex\"\n                padding={16}\n                alignItems=\"center\"\n              >\n                <Pane flex={1}>\n                  <Heading>Backtest</Heading>\n                </Pane>\n                <Pane>\n                  <Button appearance=\"primary\" iconBefore=\"play\" type=\"submit\">\n                    Run\n                  </Button>\n                </Pane>\n              </Pane>\n              <Parameters values={values} handleChange={handleChange} />\n              <Results />\n            </Pane>\n          </form>\n        )}\n      </Formik>\n    )}\n  </Subscribe>\n));\n","import React from \"react\";\nimport { Pane, Spinner } from \"evergreen-ui\";\nimport { Header } from \"./Header/Header\";\nimport { Sidebar } from \"./Sidebar/Sidebar\";\nimport { Simulator } from \"./Simulator/Simulator\";\nimport { Subscribe } from \"unstated\";\nimport { SimulatorContainer } from \"./SimulatorContainer\";\n\nconst HEADER_HEIGHT = \"52px\";\n\nconst App = () => {\n  return (\n    <Subscribe to={[SimulatorContainer]}>\n      {simulator =>\n        simulator.loading ? (\n          <Spinner\n            transform=\"translate(-50%, -50%)\"\n            position=\"absolute\"\n            left=\"50%\"\n            top=\"50%\"\n          />\n        ) : (\n          <Pane height=\"100vh\" display=\"flex\" flexDirection=\"column\">\n            <Header />\n            <Pane display=\"flex\" height={`calc(100% - ${HEADER_HEIGHT})`}>\n              <Pane flex={0} height=\"100%\">\n                <Sidebar />\n              </Pane>\n              <Pane flex={1} height=\"100%\">\n                <Simulator />\n              </Pane>\n            </Pane>\n          </Pane>\n        )\n      }\n    </Subscribe>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"unstated\";\n\nReactDOM.render(\n  <Provider>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}